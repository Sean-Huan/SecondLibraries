// Command.h

#ifndef _COMMAND_h
#define _COMMAND_h

#if defined(ARDUINO) && ARDUINO >= 100
	#include "Arduino.h"
#else
	#include "WProgram.h"
#endif

/*
	每个命令都需要校验，若从0开始，则校验位在第6位
	校验位的算法：
	command[6] = (command[2] + command[3] + command[4] + command[5]) % 256;
*/

#define BASEADDRESS				0x6000
#define WRITEADDRESS			(BASEADDRESS + 0x0008)
#define READADDRESS				(BASEADDRESS + 0x0100)

#define TRACKOFFSET				0x0000
#define CODEOFFSET				0x0002


class _Command
{
public:
	_Command();
	~_Command();

	void Judgment(uint8_t *);

	uint8_t HW_Dimming1[4] = { 0x00,0xff,0x0c,~(0x0c) };						/*光源档位 加1 命令					不修改*/		
	uint8_t HW_Dimming2[4] = { 0x00,0xff,0x18,~(0x18) };						/*光源档位 加2 命令					不修改*/
	uint8_t HW_Dimming3[4] = { 0x00,0xff,0x5e,~(0x5e) };						/*光源档位 加3 命令					不修改*/

	uint8_t HW_3D1[ 6 ] = { 0xff,0x14,0x01,0x00,0x00,0x00 };					/*立体显示标志物显示路况命令	隧道有事故，请绕行		不修改*/
	uint8_t HW_3D2[ 6 ] = { 0xff,0x14,0x02,0x00,0x00,0x00 };					/*立体显示标志物显示路况命令	前方施工，请绕行		不修改*/

	uint8_t HW_K[ 6 ] = { 0x03,0x05,0x14,0x45,0xDE,0x92 };						/*报警器打开命令				不修改*/
	uint8_t HW_G[ 6 ] = { 0x67,0x34,0x78,0xA2,0xFD,0x27 };						/*报警器关闭命令				不修改*/
								/*帧头 命令	参数   数据    帧尾*/
	uint8_t HW_RED		[ 6 ] = { 0x55,0x06,0x01,0x01,0x05,0xbb };				/*危险品 红色灯 打开命令		不修改*/
	uint8_t HW_GREEN	[ 6 ] = { 0x55,0x06,0x01,0x02,0x05,0xbb };				/*危险品 绿色灯 打开命令		不修改*/
	uint8_t HW_BLUE		[ 6 ] = { 0x55,0x06,0x01,0x03,0x05,0xbb };				/*危险品 蓝色灯 打开命令		不修改*/
	uint8_t HW_YELLOW	[ 6 ] = { 0x55,0x06,0x01,0x04,0x05,0xbb };				/*危险品 黄色灯 打开命令		不修改*/
	uint8_t HW_TURNOFF	[ 6 ] = { 0x55,0x06,0x02,0x00,0x00,0xbb };				/*危险品颜色灯关闭命令			不修改*/

							/* 帧头 命令 参数        数据       校验位 帧尾*/
	uint8_t command01[ 8 ] = { 0x55,0x02,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*码盘值清零命令				不修改*/

	uint8_t command02[ 8 ] = { 0x55,0x03,0x01 ,0x01 ,0x00 ,0x00 ,0x00 ,0xbb };	/*道闸打开命令					不修改*/
	uint8_t command03[ 8 ] = { 0x55,0x03,0x01 ,0x02 ,0x00 ,0x00 ,0x00 ,0xbb };	/*道闸关闭命令					不修改*/

	uint8_t command04[ 8 ] = { 0x55,0x0A,0x01 ,0x01 ,0x00 ,0x00 ,0x00 ,0xbb };	/*智能无线充电打开命令			不修改*/
	uint8_t command05[ 8 ] = { 0x55,0x0A,0x01 ,0x02 ,0x00 ,0x00 ,0x00 ,0xbb };	/*智能无线充电关闭命令			不修改*/

	uint8_t command06[ 8 ] = { 0x55,0x04,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*LED显示上排数据命令			修改位：3、4、5*/
	uint8_t command07[ 8 ] = { 0x55,0x04,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*LED显示下排数据命令			修改位：3、4、5*/
	uint8_t command08[ 8 ] = { 0x55,0x04,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*LED计数关闭命令				不修改*/
	uint8_t command09[ 8 ] = { 0x55,0x04,0x03 ,0x01 ,0x00 ,0x00 ,0x00 ,0xbb };	/*LED计数开始命令				不修改*/
	uint8_t command10[ 8 ] = { 0x55,0x04,0x03 ,0x02 ,0x00 ,0x00 ,0x00 ,0xbb };	/*LED计数清零命令				不修改*/
	uint8_t command11[ 8 ] = { 0x55,0x04,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*LED显示距离命令				修改位：4、5*/

	uint8_t command12[ 8 ] = { 0x55,0x0b,0x10 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT显示指定第几张图片命令		修改位：4*/
	uint8_t command13[ 8 ] = { 0x55,0x0b,0x10 ,0x01 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT显示图片向上翻命令			不修改*/
	uint8_t command14[ 8 ] = { 0x55,0x0b,0x10 ,0x02 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT显示图片向下翻命令			不修改*/
	uint8_t command15[ 8 ] = { 0x55,0x0b,0x10 ,0x03 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT自动轮播显示图片命令		不修改*/
	uint8_t command16[ 8 ] = { 0x55,0x0b,0x20 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT显示车牌前三位命令			修改位：3、4、5*/
	uint8_t command17[ 8 ] = { 0x55,0x0b,0x21 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT显示车牌后三位命令			修改位：3、4、5*/
	uint8_t command18[ 8 ] = { 0x55,0x0b,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT计时关闭命令				不修改*/
	uint8_t command19[ 8 ] = { 0x55,0x0b,0x30 ,0x01 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT计时打开命令				不修改*/
	uint8_t command20[ 8 ] = { 0x55,0x0b,0x30 ,0x02 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT计时清零命令				不修改*/
	uint8_t command21[ 8 ] = { 0x55,0x0b,0x40 ,0x02 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT显示HEX数字命令			修改位：3、4、5*/
	uint8_t command22[ 8 ] = { 0x55,0x0b,0x50 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*TFT显示距离命令				修改位：4、5*/

	uint8_t command23[ 8 ] = { 0x55,0xff,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*OpenMV识别红色球命令			不修改*/
	uint8_t command24[ 8 ] = { 0x55,0xff,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*OpenMV识别绿色球命令			不修改*/
	uint8_t command25[ 8 ] = { 0x55,0xff,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*OpenMV识别蓝色球命令			不修改*/
	uint8_t command26[ 8 ] = { 0x55,0xff,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0xbb };	/*OpenMV识别黄色球命令			不修改*/

	uint8_t command27[ 8 ] = { 0x55,0x0D,0x01 ,0x01 ,0x00 ,0x00 ,0x00 ,0xbb };	/*机械臂动作 组1 控制命令		不修改		或修改位：3*/
	uint8_t command28[ 8 ] = { 0x55,0x0D,0x01 ,0x02 ,0x00 ,0x00 ,0x00 ,0xbb };	/*机械臂动作 组2 控制命令		不修改		或修改位：3*/
	uint8_t command29[ 8 ] = { 0x55,0x0D,0x01 ,0x03 ,0x00 ,0x00 ,0x00 ,0xbb };	/*机械臂动作 组3 控制命令		不修改		或修改位：3*/
	uint8_t command30[ 8 ] = { 0x55,0x0D,0x01 ,0x04 ,0x00 ,0x00 ,0x00 ,0xbb };	/*机械臂动作 组4 控制命令		不修改		或修改位：3*/
	uint8_t command31[ 8 ] = { 0x55,0x0D,0x01 ,0x05 ,0x00 ,0x00 ,0x00 ,0xbb };	/*机械臂动作 组5 控制命令		不修改		或修改位：3*/
	uint8_t command32[ 8 ] = { 0x55,0x0D,0x01 ,0x06 ,0x00 ,0x00 ,0x00 ,0xbb };	/*机械臂动作 组6 控制命令		不修改		或修改位：3*/
	uint8_t command33[ 8 ] = { 0x55,0x06,0x20 ,0x01 ,0x00 ,0x00 ,0x21 ,0xbb };

private:

};

extern _Command Command;



#endif

